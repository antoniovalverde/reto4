{"version":3,"sources":["components/Header/Header.jsx","components/Menu/Menu.jsx","components/Footer/Footer.jsx","containers/Movie/Movie.jsx","containers/Movies/Movies.jsx","App.js","reportWebVitals.js","index.js"],"names":["Header","props","className","Menu","useState","titulo","setTitulo","genero","setGenero","listado","setListado","serie","setSerie","useEffect","axios","get","then","res","data","genres","catch","console","error","url_titulo","url_genero","to","pathname","state","type","id","placeholder","value","onChange","e","target","map","cat","name","Footer","Movie","generos","movie","genre_ids","seri","ser","total_generos","j","bandera","i","list","length","slice","title","original_title","original_name","release_date","first_air_date","src","poster_path","alt","overview","vote_count","Movies","movieType","match","params","movies","setMovies","url","location","path","es_serie","replaced","split","join","el_titulo","undefined","datos","results","App","component","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iUASeA,G,MANA,SAAAC,GACX,OAAO,iCACK,sBAAMC,UAAU,SAAhB,2B,yBCkFDC,G,MAlFF,SAAAF,GAAS,IAAD,EACWG,qBADX,mBACVC,EADU,KACFC,EADE,OAEWF,mBAAS,MAFpB,mBAEVG,EAFU,KAEFC,EAFE,OAGaJ,mBAAS,IAHtB,mBAGVK,EAHU,KAGDC,EAHC,OAISN,qBAJT,mBAIVO,EAJU,KAIHC,EAJG,KAkBjBC,qBAAU,WACNC,IAAMC,IAAN,yGACCC,MAAK,SAAAC,GAAG,OAAIP,EAAWO,EAAIC,KAAKC,WAChCC,MAAMC,QAAQC,UAGnB,IAAIC,EAAa,GAGbA,EADU,KAAXlB,EACW,kBAAcA,GAEd,oBAEd,IAAImB,EAAU,kBAAcjB,GAI5B,OAAO,qBAAKL,UAAU,OAAf,SACK,sBAAKA,UAAU,OAAf,UACI,cAAC,IAAD,CAASuB,GAAI,CACTC,SAAS,WACTC,MAAOlB,GAFX,SAII,sBAAMP,UAAU,YAAhB,8BAEJ,cAAC,IAAD,CAASuB,GAAI,CACTC,SAAS,WACTC,MAAOlB,GAFX,SAII,sBAAMP,UAAU,UAAhB,4BAEJ,gCACI,uBAAO0B,KAAK,OAAOC,GAAG,SAASC,YAAY,yBAAsBC,MAAO1B,EAAQ2B,SA5C9E,SAAAC,GAClB3B,EAAU2B,EAAEC,OAAOH,UA4CH,cAAC,IAAD,CAASN,GAAI,CACTC,SAAUH,EACVI,MAAOlB,GAFX,SAII,sBAAMP,UAAU,SAAhB,qCAGR,gCACI,wBAAQ8B,SAjDN,SAAAC,GAClBzB,EAAUyB,EAAEC,OAAOH,QAgDH,gBACKtB,QADL,IACKA,OADL,EACKA,EAAS0B,KAAI,SAAAC,GAAG,OAAE,wBAAqBL,MAAOK,EAAIP,GAAhC,SAAqCO,EAAIC,MAA5BD,EAAIP,SAExC,cAAC,IAAD,CAASJ,GAAI,CACTC,SAAUF,EACVG,MAAOlB,GAFX,SAII,sBAAMP,UAAU,SAAhB,qCAGR,sBAAK2B,GAAG,kBAAR,UACI,uBAAOD,KAAK,OAAOC,GAAG,QAAQC,YAAY,yBAAsBC,MAAOpB,EAAOqB,SAxD5E,SAAAC,GAClBrB,EAASqB,EAAEC,OAAOH,UAwDF,cAAC,IAAD,CAASN,GAAI,CACTC,SAAU,UAAYf,EACtBgB,MAAOlB,GAFX,SAII,sBAAMP,UAAU,QAAhB,sCCvEboC,G,MANA,SAAArC,GACX,OAAO,qBAAKC,UAAU,MAAf,qDCkCIqC,G,MAnCY,SAAAtC,GAWvB,IATA,IAAIuC,EAAUvC,EAAMwC,MAAMC,UAEtBC,EAAO1C,EAAM2C,IAEbC,EAAgB,GAEhBC,EAAE,EACFC,EAAU,EAENC,EAAE,EAAEA,EAAE/C,EAAMgD,KAAKC,OAAOF,IAAI,CAChC,IAAIF,EAAE,EAAGA,EAAEN,EAAQU,OAAOJ,IACnB7C,EAAMgD,KAAKD,GAAGnB,KAAOW,EAAQM,KAC5BD,GAAiB5C,EAAMgD,KAAKD,GAAGX,KAAO,MACtCU,KAGRD,EAAE,EAON,OAJe,IAAZC,IACCF,EAAgBA,EAAcM,MAAM,GAAG,IAGpC,sBAAKjD,UAAU,QAAf,UACH,iCAAQ,6BAAc,IAATyC,EAAa1C,EAAMwC,MAAMW,MAAQnD,EAAMwC,MAAMJ,SAC1D,iCAAQ,6BAAc,IAATM,EAAa1C,EAAMwC,MAAMY,eAAiBpD,EAAMwC,MAAMa,kBACnE,8BAAG,2DAAH,IAAoD,IAATX,EAAa1C,EAAMwC,MAAMc,aAActD,EAAMwC,MAAMe,kBAC9F,qBAAKC,IAAK,iCAAmCxD,EAAMwC,MAAMiB,YAAaC,IAAI,KAC1E,8BAAG,+CAAH,IAA+B1D,EAAMwC,MAAMmB,YAC3C,8BAAG,gDAAH,IAA6Bf,KAC7B,8BAAG,kDAAH,IAA+B5C,EAAMwC,MAAMoB,mBC8BpCC,G,MA5DA,SAAA7D,GACX,IAAM8D,EAAY9D,EAAM+D,MAAMC,OAAOF,UADlB,EAEQ3D,mBAAS,IAFjB,mBAEZ8D,EAFY,KAELC,EAFK,KAIfC,EAAMnE,EAAM+D,MAAMC,OAAOb,MACvB3C,EAAUR,EAAMoE,SAAS1C,MAE3B2C,EAAO,GACPC,EAAW,EACf,GAAiB,YAAdR,EACCK,EAAM,uBACNE,EAAI,6CAAyCP,EAAzC,iEAEF,GAAiB,WAAdA,EAAuB,CAC5B,IACMS,EADUvE,EAAM+D,MAAMC,OAAOb,MACRqB,MAAM,KAAKC,KAAK,KAE3CJ,EAAI,6IAAyIE,QAE3I,GAAiB,WAAdT,EAAuB,CAC5B,IACMS,EADUvE,EAAM+D,MAAMC,OAAOb,MACRqB,MAAM,KAAKC,KAAK,KAE3CJ,EAAI,qJAAiJE,QACnJ,GAAiB,UAAdT,EAAsB,CAC3B,IAAIY,EAAY1E,EAAM+D,MAAMC,OAAOb,MAC/BoB,EAAW,iBACEI,IAAdD,IACCH,EAAWG,EAAUF,MAAM,KAAKC,KAAK,MAGzCJ,EAAI,0IAAsIE,GAC1ID,EAAW,MACQ,YAAdR,IACLK,EAAM,oBACNE,EAAI,+KAoBR,OAjBAzD,qBAAU,WACNC,IAAMC,IAAIuD,GACTtD,MAAK,SAAAC,GACF,IAAI4D,EAAQ,GACZ,GAAiB,YAAdd,GAAyC,YAAdA,EAAwB,CAElDc,EAAQ5D,EAAIC,KAAK4D,QAAQ3B,MAAM,EADjB,SAGd0B,EAAQ5D,EAAIC,KAAK4D,QAErBX,EAAUU,MAGbzD,MAAMC,QAAQC,SAEjB,CAAC8C,IAEI,qBAAKlE,UAAU,SAAf,gBACFgE,QADE,IACFA,OADE,EACFA,EAAQ/B,KAAI,SAAAM,GAAK,OAAE,cAAC,EAAD,CAAsBG,IAAK2B,EAAUtB,KAAMxC,EAASgC,MAAOA,GAA/CA,EAAMZ,WCvC/BkD,MAff,WACE,OACI,qBAAK7E,UAAU,YAAf,SACE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,cAAC,EAAD,IACA,cAAC,IAAD,UACE,cAAC,IAAD,CAAOoE,KAAK,sBAAsBU,UAAWlB,EAAQmB,OAAK,MAE5D,cAAC,EAAD,UCJKC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBpE,MAAK,YAAkD,IAA/CqE,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.2cae47da.chunk.js","sourcesContent":["import React from 'react';\r\nimport './Header.scss';\r\n\r\nconst Header = props =>{\r\n    return <header>\r\n                <span className=\"titulo\">Videoclub</span>\r\n            </header>\r\n}\r\n\r\nexport default Header;","import axios from 'axios';\r\nimport React, {useEffect, useState} from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport './Menu.scss';\r\n\r\nconst Menu = props =>{\r\n    const [titulo, setTitulo] = useState();\r\n    const [genero, setGenero] = useState('28');\r\n    const [listado, setListado] = useState([]);\r\n    const [serie, setSerie] = useState();\r\n\r\n    const handleChangeT = e => {\r\n        setTitulo(e.target.value) \r\n    }\r\n\r\n    const handleChangeG = e => {\r\n        setGenero(e.target.value) \r\n    }\r\n\r\n    const handleChangeS = e => {\r\n        setSerie(e.target.value) \r\n    }\r\n\r\n    useEffect(() => {\r\n        axios.get(`https://api.themoviedb.org/3/genre/movie/list?api_key=f6c510b3b52b2f6efd5ed11ca30c9c4d&language=es-ES`)\r\n        .then(res => setListado(res.data.genres))\r\n        .catch(console.error)\r\n    });\r\n\r\n    let url_titulo = '';\r\n\r\n    if(titulo !== ''){\r\n        url_titulo = `/titulo/${titulo}`; \r\n    }else{\r\n        url_titulo = `/titulo/undefined`;\r\n    }\r\n    let url_genero = `/genero/${genero}`; \r\n\r\n    \r\n\r\n    return <div className=\"main\">\r\n                <div className=\"menu\">\r\n                    <NavLink to={{\r\n                        pathname:'/popular',\r\n                        state: listado        \r\n                }}>\r\n                        <span className=\"populares\">10 + Populares</span>\r\n                    </NavLink>\r\n                    <NavLink to={{\r\n                        pathname:'/votadas',\r\n                        state: listado        \r\n                    }}>\r\n                        <span className=\"votadas\">10 + Votadas</span>\r\n                    </NavLink>\r\n                    <div>\r\n                        <input type=\"text\" id=\"titulo\" placeholder=\"Indica el título...\" value={titulo} onChange={handleChangeT} />\r\n                        <NavLink to={{\r\n                            pathname: url_titulo,\r\n                            state: listado\r\n                        }}>\r\n                            <span className=\"titulo\">Buscar Película</span>\r\n                        </NavLink>\r\n                    </div>\r\n                    <div>\r\n                        <select onChange={handleChangeG}>\r\n                            {listado?.map(cat=><option key={cat.id} value={cat.id}>{cat.name}</option>)}\r\n                        </select>\r\n                        <NavLink to={{\r\n                            pathname: url_genero,\r\n                            state: listado\r\n                        }}>\r\n                            <span className=\"genero\">Buscar Película</span>\r\n                        </NavLink>                      \r\n                    </div>\r\n                    <div id=\"containerseries\">\r\n                        <input type=\"text\" id=\"serie\" placeholder=\"Indica el título...\" value={serie} onChange={handleChangeS} />\r\n                        <NavLink to={{\r\n                            pathname: '/serie/' + serie,\r\n                            state: listado\r\n                        }}>\r\n                            <span className=\"serie\">Buscar Serie</span>\r\n                        </NavLink> \r\n                    </div>\r\n                </div>\r\n            </div>\r\n}\r\n\r\nexport default Menu;","import React from 'react';\r\nimport './Footer.scss';\r\n\r\nconst Footer = props =>{\r\n    return <div className=\"pie\">\r\n                Copyright© 2020 - Antonio Valverde\r\n            </div>\r\n}\r\n\r\nexport default Footer;","import React from \"react\";\r\nimport './Movie.scss';\r\n\r\nconst Movie = /*({movie})*/props => {\r\n\r\n    let generos = props.movie.genre_ids;\r\n\r\n    let seri = props.ser;\r\n\r\n    let total_generos = '';\r\n\r\n    let j=0;\r\n    let bandera = 0;\r\n\r\n    for(let i=0;i<props.list.length;i++){\r\n        for(j=0; j<generos.length;j++){\r\n            if(props.list[i].id === generos[j]){\r\n                total_generos += props.list[i].name + ' - ';\r\n                bandera++;\r\n            }\r\n        }\r\n        j=0;\r\n    }\r\n\r\n    if(bandera !== 0){\r\n        total_generos = total_generos.slice(0,-2)\r\n    }\r\n\r\n    return <div className=\"movie\">\r\n        <center><h2>{seri === 0 ? props.movie.title : props.movie.name}</h2></center>\r\n        <center><h3>{seri === 0 ? props.movie.original_title : props.movie.original_name}</h3></center>\r\n        <p><strong>Fecha de lanzamiento:</strong> {seri === 0 ? props.movie.release_date: props.movie.first_air_date}</p>\r\n        <img src={\"http://image.tmdb.org/t/p/w200\" + props.movie.poster_path} alt=\"\"/>\r\n        <p><strong>Sinopsis:</strong> {props.movie.overview}</p>\r\n        <p><strong>Género:</strong> {total_generos}</p>\r\n        <p><strong>Nº votos:</strong> {props.movie.vote_count}</p>\r\n    </div>\r\n}\r\nexport default Movie;","import axios from 'axios';\r\nimport React, { useEffect, useState } from 'react';\r\nimport Movie from '../Movie/Movie'\r\nimport './Movies.scss';\r\n\r\nconst Movies = props =>{\r\n    const movieType = props.match.params.movieType;\r\n    const [movies,setMovies] = useState([])\r\n\r\n    let url = props.match.params.title;\r\n    const listado = props.location.state;\r\n\r\n    let path = '';\r\n    let es_serie = 0;\r\n    if(movieType === 'popular'){\r\n        url = '¬¬¬€~#';\r\n        path = `https://api.themoviedb.org/3/movie/${movieType}?api_key=f6c510b3b52b2f6efd5ed11ca30c9c4d&language=es-ES`;\r\n\r\n    }else if(movieType === 'titulo'){\r\n        let el_titulo = props.match.params.title;\r\n        const replaced = el_titulo.split(' ').join('+');\r\n        //console.log(replaced)\r\n        path = `https://api.themoviedb.org/3/search/movie?api_key=f6c510b3b52b2f6efd5ed11ca30c9c4d&language=es-ES&page=1&include_adult=false&query=${replaced}`;\r\n\r\n    }else if(movieType === 'genero'){\r\n        let el_genero = props.match.params.title;\r\n        const replaced = el_genero.split(' ').join('+')\r\n\r\n        path = `https://api.themoviedb.org/3/discover/movie?api_key=f6c510b3b52b2f6efd5ed11ca30c9c4d&language=es-ES&page=1&include_adult=false&with_genres=${replaced}`\r\n    }else if(movieType === 'serie'){\r\n        let el_titulo = props.match.params.title;\r\n        let replaced = 'undefined';\r\n        if(el_titulo !== undefined){\r\n            replaced = el_titulo.split(' ').join('+');\r\n        }\r\n        //console.log(replaced)\r\n        path = `https://api.themoviedb.org/3/search/tv?api_key=f6c510b3b52b2f6efd5ed11ca30c9c4d&language=es-ES&page=1&include_adult=false&query=${replaced}` /*`https://api.themoviedb.org/3/discover/movie?api_key=f6c510b3b52b2f6efd5ed11ca30c9c4d&language=es-ES&page=1&include_adult=false&vote_count.gte=20000&sort_by=vote_count.desc`*/;\r\n        es_serie = 1;\r\n    }else if(movieType === 'votadas'){\r\n        url = '@#~€€~@';\r\n        path = `https://api.themoviedb.org/3/discover/movie?api_key=f6c510b3b52b2f6efd5ed11ca30c9c4d&language=es-ES&page=1&include_adult=false&vote_count.gte=10000&sort_by=vote_count.desc`;\r\n    }\r\n\r\n    useEffect(()=>{\r\n        axios.get(path)\r\n        .then(res =>{\r\n            let datos = [];\r\n            if(movieType === 'popular' || movieType === 'votadas'){\r\n                const limit = 10;\r\n                datos = res.data.results.slice(0, limit)\r\n            }else{\r\n                datos = res.data.results\r\n            }\r\n            setMovies(datos)})\r\n\r\n\r\n        .catch(console.error)\r\n    // eslint-disable-next-line\r\n    },[url])\r\n\r\n    return <div className=\"movies\">\r\n        {movies?.map(movie=><Movie key={movie.id} ser={es_serie} list={listado} movie={movie}/>)}\r\n    </div>\r\n}\r\n\r\nexport default Movies;","import './App.scss';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport Header from './components/Header/Header.jsx';\nimport Menu from './components/Menu/Menu.jsx';\nimport Footer from './components/Footer/Footer.jsx';\nimport Movies from './containers/Movies/Movies.jsx';\n\nfunction App() {\n  return (\n      <div className=\"peliculas\">\n        <BrowserRouter>\n          <Header/>\n          <Menu/>\n          <Switch>\n            <Route path=\"/:movieType/:title?\" component={Movies} exact/>\n          </Switch>\n          <Footer/>\n        </BrowserRouter>\n      </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}